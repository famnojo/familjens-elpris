name: Uppdatera elpriser (SE3)

on:
  schedule:
    - cron: "30 12 * * *"   # 14:30 svensk tid (GitHub kör UTC)
  workflow_dispatch:

permissions:
  contents: write   # <- viktigt för push

jobs:
  fetch-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checka ut repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Sätt upp Python + requests
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip requests

      - name: Skapa data-mapp
        run: mkdir -p data

      - name: Hämta och skriv today.json & tomorrow.json
        run: |
          python - <<'PY'
          import json, datetime as dt, requests, sys
          from zoneinfo import ZoneInfo
          from pathlib import Path

          ZONE = "SE3"
          BASE = "https://www.elprisetjustnu.se/api/v1/prices"

          now_se = dt.datetime.now(ZoneInfo("Europe/Stockholm"))
          today = now_se.date()
          tomorrow = today + dt.timedelta(days=1)

          def fetch_day(day):
            url = f"{BASE}/{day:%Y}/{day:%m}-{day:%d}_{ZONE}.json"
            print(f"⇒ Hämtar: {url}")
            r = requests.get(url, timeout=30)
            if r.status_code == 404:
              print("   404 – ingen data ännu")
              return None
            r.raise_for_status()
            data = r.json()
            print(f"   Antal poster: {len(data)}")
            return [
              {"time_start": it["time_start"], "SEK_per_kWh": float(it["SEK_per_kWh"])}
              for it in data
            ]

          Path("data").mkdir(exist_ok=True)

          # Dagens (måste finnas)
          today_list = fetch_day(today)
          if not today_list:
            print("FEL: Kunde inte hämta dagens data – avbryter.", file=sys.stderr)
            sys.exit(1)
          Path("data/today.json").write_text(
            json.dumps(today_list, ensure_ascii=False, indent=2), encoding="utf-8"
          )

          # Morgondagens (frivillig)
          tomorrow_list = fetch_day(tomorrow)
          p = Path("data/tomorrow.json")
          if tomorrow_list:
            p.write_text(json.dumps(tomorrow_list, ensure_ascii=False, indent=2), encoding="utf-8")
          else:
            if p.exists():
              print("   Tar bort gammal tomorrow.json så vi inte visar gammal morgondag.")
              p.unlink()
          PY

      - name: Visa genererade filer
        run: |
          echo "----- ls data -----"
          ls -l data || true
          echo "----- head today -----"
          head -n 40 data/today.json || true
          echo "----- head tomorrow -----"
          head -n 40 data/tomorrow.json || true

      - name: Commit & push ändringar
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Auto: uppdatera today/tomorrow (SE3)"
          file_pattern: "data/*.json"
